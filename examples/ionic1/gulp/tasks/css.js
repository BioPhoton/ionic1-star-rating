/**
 * css.js
 *
 * This file uses the config.js and helper.js file located in ./gulp
 *
 * This file requires following npm modules:
 * ``
 * npm install gulp gulp-load-plugins gulp-autoprefixer gulp-sass gulp-cssnano gulp-rename gulp-inject  gulp-plumber --save-dev
 * ``
 *
 */

'use strict';

var gulp = require('gulp'),
    helper = require('../helper'),
    $ = require('gulp-load-plugins')(),
    //postcss = require('gulp-postcss'),
    autoprefixer = require('gulp-autoprefixer');

var config = require('../config.js'),
    assetsFolder = (config.assetsFolder)?config.buildFolder+config.assetsFolder:config.buildFolder+'assets/',
    assetsCssFolder = (config.assetsCssFolder)?config.assetsCssFolder:'css/',
    mainCssFile = (config.mainCssFile)?config.mainCssFile:'app.css',
    minCssFile = config.minCssFile || 'app.min.css',
    scssFoldername = (config.scssFoldername)?config.scssFoldername:'scss/';


var defaultConfig = {
        indexFile : config.buildIndex,
        mainCssFile : mainCssFile,
        minCssFile : minCssFile,
        sassScr : ["./scss/**/*.scss", config.src + '**/*.scss'],
        sassDest : assetsFolder+assetsCssFolder,
        sassOptions : {
            indentWidth: 4,
            outputStyle: 'expanded',
            errorLogToConsole: true
        },
        scssOrder : [],
        autoprefixerOptions : {
            browsers: [
                '> 1%',
                'last 2 versions',
                'firefox >= 4',
                'safari 7',
                'safari 8',
                'IE 8',
                'IE 9',
                'IE 10',
                'IE 11'
            ],
            cascade: false
        }
    };

//////////////////


var  cssConfig = defaultConfig;

/**
 *  Overrides
 *
 *  config.css {[see defaultConfig here]}
 *
 **/

if('css' in config) {
    cssConfig = helper.arrayConcatExtend(defaultConfig, config.css);
}

//__________________________________________________________________________________________________

//organize css files for project
gulp.task('css:clean', function(done) {
    helper.log('delete all autogenerated css files');
    return helper.clean([cssConfig.sassDest + '**/*.*'], done);
});

gulp.task('css:copy', function(done){
    helper.log('parsing scss from '+cssConfig.sassScr+', autoprefixe and save it to '+cssConfig.sassDest+mainCssFile);
    return gulp.src(['!./src/index.html','./src/**/*.html', './src/**/*.scss'])
            .pipe(gulp.dest('./www'), done);
});

gulp.task('css:recompile', function(done) {
    return compile(done);
});

gulp.task('css:compile', ['css:clean'], function(done) {
    return compile(done);
});

gulp.task('css:watch', function(done) {
    return gulp.watch(cssConfig.sassScr, ['css:recompile']);
});

gulp.task('css:inject', function(done) {
  var target = gulp.src(cssConfig.indexFile);
  var sources = gulp.src(cssConfig.sassDest+'*.css', {read: false});
  helper.log('Wiring the css dependencies form '+sources+' into '+ target);

  return target
    .pipe($.inject(sources, {ignorePath: 'www', addRootSlash: false}))
    .pipe(gulp.dest(config.buildFolder), done);

});

gulp.task('css:compile-optimize', function(done) {
  var srcFile = cssConfig.sassDest+cssConfig.mainCssFile;
  var destFile = cssConfig.sassDest+cssConfig.minCssFile;
  helper.log('minify css from '+srcFile+ ' and save it to '+destFile);

  return gulp.src(srcFile)
    .pipe($.cssnano())
    .pipe($.rename({suffix: '.min'}))
    .pipe(gulp.dest(cssConfig.sassDest), done);

});

gulp.task('css:inject-optimize', function(done) {

  var target = gulp.src(cssConfig.indexFile);
  var sources = gulp.src(cssConfig.sassDest+'*.min.css', {read: false});
  helper.log('Wiring the css dependencies form '+sources+' into '+ target);

  return target
    .pipe($.inject(sources, {ignorePath: 'www', addRootSlash: false}))
    .pipe(gulp.dest(config.buildFolder), done);

});


function compile(done) {
    helper.log('parsing scss from '+cssConfig.sassScr+', autoprefixe and save it to '+cssConfig.sassDest+mainCssFile);

    var processors = [
        autoprefixer(cssConfig.autoprefixerOptions)
    ];

    return gulp.src(cssConfig.sassScr)
        .pipe($.concat(mainCssFile))
        //move plumber into helper.js
        .pipe($.plumber()) // exit gracefully if something fails after this
        .pipe($.sass(cssConfig.sassOptions).on('error', $.sass.logError))
        .pipe(autoprefixer(cssConfig.autoprefixerOptions))
        .pipe(gulp.dest(cssConfig.sassDest), done);
}

